@page
@using AAOAdmin.Models
@using static AAOAdmin.Controllers.DashboardController
@using System
@using System.Collections

@{
  int[] calendarDates = CalendarDates();
  int routesMissingDrivers = GetRoutesMissingDrivers();
  int routesThisWeek = GetRoutesThisWeek();
  int availableDriversThisWeek = GetAvailableDriversThisWeek();
}

<div class="grid grid-cols-2 gap-4">

  <div class="grid grid-cols-3 grid-rows-3 gap-4 ">
    <div class="w-100 h-100 bg-slate-200 rounded-xl text-center flex place-content-center flex-col ">
      <h3 class="font-bold text-2xl	">
        @routesThisWeek
      </h3>

      <h3 class="text-xl">Ruter denne uge</h3>
    </div>

    <div class="w-100 h-100 bg-slate-200 rounded-xl text-center flex place-content-center flex-col ">
      <h3 class="font-bold text-2xl	">
        @routesMissingDrivers
      </h3>

      <h3 class="text-xl">Ruter uden chauffør</h3>
    </div>

    <div class="w-100 h-100 bg-slate-200 rounded-xl text-center flex place-content-center flex-col ">
      <h3 class="font-bold text-2xl	">
        @availableDriversThisWeek
      </h3>

      <h3 class="text-xl">Ledige chauffører dage</h3>
    </div>

  </div>

  <div class="w-100 grid grid-cols-7 gap-2 text-center	">
    @for (int i = 0; i < calendarDates.Length; ++i)
    {
      <div class="calendar-date relative flex place-items-center	place-content-center w-100 p-4 rounded-full"
      style="border:2px solid @(calendarDates[i] == 0 ? "green": "yellow") ">
        <span class="absolute top-0 right-2 font-medium	">
          @calendarDates[i]
        </span>

        <p class="font-bold">
          @(i + 1)
        </p>
      </div>
    }

  </div>
</div>


<div class="h-100 w-full flex items-center justify-center bg-teal-lightest font-sans mt-20">
    <div class="bg-white rounded shadow p-6 m-4 w-full lg:w-3/4 lg:max-w-lg">
        <div class="mb-4">
            <h1 class="text-3xl md:text-4xl font-medium mb-2">
                To-do liste
            </h1>
            <div class="flex mt-4">
                <input class="shadow appearance-none border rounded w-full py-2 px-3 mr-4 text-grey-darker" name="text" id="text" placeholder="Tilføj en to-do task" />
                <input type="hidden" id="saveIndex" />
                <button class="p-2 lg:px-4 md:mx-2 text-center border border-solid border-[#00904a] rounded text-white bg-[#00904a] transition-colors duration-300 mt-1 md:mt-0 md:ml-1" id="add-task-btn">Tilføj</button>
                <button class="p-2 lg:px-4 md:mx-2 text-center border border-solid border-[#888] rounded bg-[#888] text-white transition-colors duration-300 mt-1 md:mt-0 md:ml-1" style="display: none" id="save-todo-btn">Rediger</button>
            </div>
        </div>
        <div id="listBox"></div>
    </div>
</div>

<script>
  const calendarDates = document.querySelectorAll(".calendar-date");

  for (let i = 0; i < calendarDates.length; ++i) {
    calendarDates[i].addEventListener("click", () => {
      const date = `${new Date().getFullYear()}-${new Date().getMonth() + 1}-${i + 1}`;
      window.location.href = `${window.location.origin}/routes?searchString=${date}`;
      console.log(date, window.location.path);
    });
  }



    const text = document.getElementById("text");
    const addTaskButton = document.getElementById("add-task-btn");
    const saveTaskButton = document.getElementById("save-todo-btn");
    const listBox = document.getElementById("listBox");
    const saveInd = document.getElementById("saveIndex");

    let todoArray = [];

    addTaskButton.addEventListener("click", (e) => {
        e.preventDefault();
        let todo = localStorage.getItem("todo");
        if (todo === null) {
            todoArray = [];
        } else {
            todoArray = JSON.parse(todo);
        }
        todoArray.push(text.value);
        text.value = "";
        localStorage.setItem("todo", JSON.stringify(todoArray));
        displayTodo();
    });

    function displayTodo() {
        let todo = localStorage.getItem("todo");
        if (todo === null) {
            todoArray = [];
        } else {
            todoArray = JSON.parse(todo);
        }
        let htmlCode = "";
        todoArray.forEach((list, ind) => {
            htmlCode += `<div class='flex mb-4 items-center'>
                        <p class='w-full text-grey-darkest'>${list}</p>
                        <button onclick='edit(${ind})' class='flex-no-shrink px-3 py-1 ml-4 mr-2 border-2 rounded text-white text-grey bg-[#888]'>Rediger</button>
                        <button onclick='deleteTodo(${ind})' class='flex-no-shrink px-3 py-1 ml-2 border-2 rounded text-white bg-red-500'>Slet</button>
                        </div>`;
        });
        listBox.innerHTML = htmlCode;
    }

    displayTodo();

    function deleteTodo(ind) {
        let todo = localStorage.getItem("todo");
        todoArray = JSON.parse(todo);
        todoArray.splice(ind, 1);
        localStorage.setItem("todo", JSON.stringify(todoArray));
        displayTodo();
    }

    function edit(ind) {
        saveInd.value = ind;
        let todo = localStorage.getItem("todo");
        todoArray = JSON.parse(todo);
        text.value = todoArray[ind];
        addTaskButton.style.display = "none";
        saveTaskButton.style.display = "block";
    }

    saveTaskButton.addEventListener("click", () => {
        let todo = localStorage.getItem("todo");
        todoArray = JSON.parse(todo);
        let id = saveInd.value;
        todoArray[id] = text.value;
        addTaskButton.style.display = "block";
        saveTaskButton.style.display = "none";
        text.value = "";
        localStorage.setItem("todo", JSON.stringify(todoArray));
        displayTodo();
    });

</script>
